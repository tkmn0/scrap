webpackJsonp([7564900395505],{379:function(t,i){t.exports={data:{site:{meta:{title:"n0の断片",description:"メモとか、スニペットとか",url:"https://tkmn0.github.io/scrap/",author:"n0",twitter:"n0",adsense:""}},post:{id:"/Users/kadinche/Desktop/n0WorkSpace/techblog/blog/src/pages/articles/Hotkeyがあつい/index.md absPath of file >>> MarkdownRemark",html:'<p>Hotkey.app のご紹介です。</p>\n<!--more-->\n<p>最近は、自分のプログラミングの領域が定まってきたのか、使うツールが決まったものになってきました。</p>\n<ul>\n<li>Xcde(iOS)</li>\n<li>Android Studio</li>\n<li>Unity(iOS,Android)</li>\n<li>VisualCode Studio(editor)</li>\n<li>Chrome(Browser)</li>\n<li>Boostnote(memo)</li>\n<li>iterm(CLI)  </li>\n</ul>\n<p>使うアプリが決まってたら、Cmd+tab でいちいちアプリを切り替えるより、ショートカットキーで使いたいアプリを最前面に持ってこれたらいいなぁと思っていました。<del>そもそも Cmd+tab の UI,UX があまり好きではないのです</del><br>\nそこで今回使用したアプリが、<a href="https://itunes.apple.com/jp/app/hotkey-app/id975890633?mt=12">HotKey.app</a>です。そのままですね。<br>\n使い方もとても簡単なので、ほぼ脳死で出来上がります。<br>\n僕の場合は、 </p>\n<ul>\n<li>iterm => Cmd+shift+t</li>\n<li>vscode => Cmd+shit+v</li>\n<li>Chrome => Cmd+shift+c</li>\n<li>Boostnote => Cmd+shift+b    </li>\n</ul>\n<p>と設定しております。 Unity はバージョンを複数管理しているので、それぞれにコマンド振るのもなんだかなぁと思ったので、、、。 Xcode,AndroidStudio については割り振っても問題ないのですが、使用頻度的に、とりあえず SpotLight でいいかなと\n<br>\n最初は、applescript とか、automator を使って自作しようとしたのですが、案外面倒臭かったのでやめました笑。\n車輪の再なんとかですしね。<br>\n発見としては、applescript が javascript で書けるらしいのです！これは驚いた。<br>\nいつか機会があったら、automator やってみようかなあ　くらいの感じです。<br>\nではまた次回</p>',frontmatter:{layout:"post",title:"Hotkeyがあつい",path:"/01072018/hotkey/",categories:["効率化"],date:"2018/01/08"}}},pathContext:{path:"/01072018/hotkey/"}}}});
//# sourceMappingURL=path---01072018-hotkey-d751aab673e70fcef88a.js.map