{"version":3,"sources":["webpack:///path---index-4f62f9a08ea51a395ada.js","webpack:///./.cache/json/index.json"],"names":["webpackJsonp","380","module","exports","data","site","siteMetadata","title","description","url","author","twitter","adsense","remark","posts","post","html","frontmatter","layout","path","categories","date","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,QAAAC,YAAA,eAAAC,IAAA,iCAAAC,OAAA,KAAAC,QAAA,KAAAC,QAAA,KAA+HC,QAAWC,QAAUC,MAAQC,KAAA,8NAAAC,aAAoPC,OAAA,OAAAX,MAAA,iBAAAY,KAAA,gBAAAC,YAAA,MAAAC,KAAA,iBAA4GN,MAAQC,KAAA,wiCAAAC,aAAgkCC,OAAA,OAAAX,MAAA,aAAAY,KAAA,oBAAAC,YAAA,OAAAC,KAAA,iBAA6GN,MAAQC,KAAA,+0BAAAC,aAAy2BC,OAAA,OAAAX,MAAA,cAAAY,KAAA,sBAAAC,YAAA,OAAAC,KAAA,iBAAgHN,MAAQC,KAAA,qzZAAw1ZC,aAAykBC,OAAA,OAAAX,MAAA,qBAAAY,KAAA,0BAAAC,YAAA,qBAAAC,KAAA,iBAAyIN,MAAQC,KAAA,oiEAAAC,aAA8jEC,OAAA,OAAAX,MAAA,iBAAAY,KAAA,sBAAAC,YAAA,cAAAC,KAAA,mBAA2HC","file":"path---index-4f62f9a08ea51a395ada.js","sourcesContent":["webpackJsonp([142629428675168],{\n\n/***/ 380:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"n0の断片\",\"description\":\"メモとか、スニペットとか\",\"url\":\"https://tkmn0.github.io/scrap/\",\"author\":\"n0\",\"twitter\":\"n0\",\"adsense\":\"\"}},\"remark\":{\"posts\":[{\"post\":{\"html\":\"<p>技術ブログを始めることになりました。</p>\\n<!--more-->\\n<p>技術ブログといっても、メモレベルのことばかりになるやもしれませんが。\\nちなみに、Gatsby という静的 web ページ制作のためのフレームワークを使用しました。React.js で動いています。どうですかー？ロード速いですか？</p>\\n<p>これからページをいじっていこうと思っています。\\nReact.js と、scss を勉強します。</p>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"TECH Blog 始めます\",\"path\":\"/Hello_World/\",\"categories\":[\"雑記\"],\"date\":\"2018/01/06\"}}},{\"post\":{\"html\":\"<p>Hotkey.appのご紹介です。</p>\\n<!--more-->\\n<p>最近は、自分のプログラミングの領域が定まってきたのか、使うツールが決まったものになってきました。</p>\\n<ul>\\n<li>Xcde(iOS)</li>\\n<li>Android Studio</li>\\n<li>Unity(iOS,Android)</li>\\n<li>VisualCode Studio(editor)</li>\\n<li>Chrome(Browser)</li>\\n<li>Boostnote(memo)</li>\\n<li>iterm(CLI)  </li>\\n</ul>\\n<p>使うアプリが決まってたら、Cmd+tabでいちいちアプリを切り替えるより、ショートカットキーで使いたいアプリを最前面に持ってこれたらいいなぁと思っていました。<del>そもそもCmd+tabのUI,UXがあまり好きではないのです</del><br>\\nそこで今回使用したアプリが、<a href=\\\"https://itunes.apple.com/jp/app/hotkey-app/id975890633?mt=12\\\">HotKey.app</a>です。そのままですね。<br>\\n使い方もとても簡単なので、ほぼ脳死で出来上がります。<br>\\n僕の場合は、 </p>\\n<ul>\\n<li>iterm => Cmd+shift+t</li>\\n<li>vscode => Cmd+shit+v</li>\\n<li>Chrome => Cmd+shift+c</li>\\n<li>Boostnote => Cmd+shift+b    </li>\\n</ul>\\n<p>と設定しております。 Unityはバージョンを複数管理しているので、それぞれにコマンド振るのもなんだかなぁと思ったので、、、。 Xcode,AndroidStudioについては割り振っても問題ないのですが、使用頻度的に、とりあえずSpotLightでいいかなと\\n<br>\\n最初は、applescriptとか、automatorを使って自作しようとしたのですが、案外面倒臭かったのでやめました笑。\\n車輪の再なんとかですしね。<br>\\n発見としては、applescriptがjavascriptで書けるらしいのです！これは驚いた。<br>\\nいつか機会があったら、automatorやってみようかなあ　くらいの感じです。<br>\\nではまた次回</p>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"Hotkeyがあつい\",\"path\":\"/01072018/hotkey/\",\"categories\":[\"効率化\"],\"date\":\"2018/01/08\"}}},{\"post\":{\"html\":\"<p>このブログは Gatsby というフレームワークによって書かれています。</p>\\n<!--more-->\\n<p>Gatsby を髪の毛以外に使えるとは思いませんでしたねぇ。<br>\\nGatsby: <a href=\\\"https://github.com/gatsbyjs/gatsby\\\">https://github.com/gatsbyjs/gatsby</a><br>\\nDocument: <a href=\\\"https://www.gatsbyjs.org/docs/\\\">https://www.gatsbyjs.org/docs/</a></p>\\n<p>Document の通りすすめていけば簡単に React.js で書かれたページが作成されます。 もしくは,“Gatsby react”とかって検索していただければ日本語の記事も複数出てきます。(このページは@jaxx2104 さん作と思われるテンプレートが Gatsby の Document に乗ってる starter に含まれていたので、存分に使わせていただいております。こんなかっこいいテンプレート誠にありがとうございます。)</p>\\n<p>記事の作成はマークダウン方式でガシガシ作成します。リアルタイムで記事内容が反映されていくので、書いてて楽しいですね笑。</p>\\n<h2>ブログやること</h2>\\n<hr>\\n<ul>\\n<li>コマンドで記事作成できるようにする</li>\\n<li>コマンドで記事を投稿できるようにする</li>\\n<li>右側に記事のカテゴリ別一覧とかを表示する</li>\\n<li>前の記事、次の記事　ボタンの作成</li>\\n<li>各種リンク(github, twitter)を作る(フッターかな？)</li>\\n</ul>\\n<p>ただ、React.js も scss も詳しくないので、時間がかかるかもなあ、というのが本音ですね。頑張っていきましょう。</p>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"Gatsbyのご紹介。\",\"path\":\"/01072018/gatsby01/\",\"categories\":[\"ブログ\"],\"date\":\"2018/01/06\"}}},{\"post\":{\"html\":\"<p>コマンドで記事のテンプレート作成まで行けたら、と思ってもがいてみたので、その備忘録をば。</p>\\n<h3>ゴール</h3>\\n<p><code>npm run blog -- -w タイトル パス</code>  </p>\\n<p>このコマンドでテンプレートを作成する。</p>\\n<!--more-->\\n<h3>やったこと</h3>\\n<ul>\\n<li>\\n<ol>\\n<li>shellscript を書く</li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\\"2\\\">\\n<li>package.json の中身をいじる</li>\\n</ol>\\n</li>\\n</ul>\\n<h2>1. shellscriptを書く</h2>\\n<hr>\\n<p>blog.sh を作成</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-powershell\\\"><code><span class=\\\"token comment\\\">#blog.sh</span>\\n<span class=\\\"token comment\\\">#!/bin/bash</span>\\n<span class=\\\"token keyword\\\">function</span> usage<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token function\\\">cat</span> &lt;&lt;_EOT_\\nUsage:\\n  <span class=\\\"token variable\\\">$0</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">-</span>w<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">-</span>p<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">-</span>f filename<span class=\\\"token punctuation\\\">]</span> arg1 <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n\\nDescription:\\n  hogehogehoge\\n\\nOptions:\\n  <span class=\\\"token operator\\\">-</span>w    <span class=\\\"token function\\\">write</span> blog<span class=\\\"token punctuation\\\">(</span>create blog componets<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token operator\\\">-</span>p    post blog to github pages\\n\\n_EOT_\\n<span class=\\\"token keyword\\\">exit</span> 1\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">write</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  local today=$<span class=\\\"token punctuation\\\">(</span>date <span class=\\\"token string\\\">\\\"+%m%d%Y\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">!</span> <span class=\\\"token operator\\\">-</span>e <span class=\\\"token string\\\">\\\"./src/pages/articles/${today}\\\"</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> then\\n  mkdir <span class=\\\"token string\\\">\\\"./src/pages/articles/${today}\\\"</span>\\n  fi\\n\\n  local title=<span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$1</span>\\\"</span>\\n  local path=<span class=\\\"token string\\\">\\\"./src/pages/articles/${today}/<span class=\\\"token variable\\\">$title</span>\\\"</span>\\n  local url=<span class=\\\"token string\\\">\\\"#\\\"</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">-</span>n <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$2</span>\\\"</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>then\\n  url=<span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$2</span>\\\"</span>\\n  fi\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">-</span>e <span class=\\\"token variable\\\">$path</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> then\\n  local num=1\\n  local _path=<span class=\\\"token variable\\\">$path</span><span class=\\\"token string\\\">\\\"(${num})\\\"</span>\\n  <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">-</span>e <span class=\\\"token variable\\\">$_path</span> <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token keyword\\\">do</span> \\n    num=$<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span> num <span class=\\\"token operator\\\">+</span> 1 <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    _path=<span class=\\\"token variable\\\">$path</span><span class=\\\"token string\\\">\\\"(${num})\\\"</span>\\n  done\\n  <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\"the directry ${today} is already exist!\\\"</span>\\n  <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\"create (<span class=\\\"token variable\\\">$num</span>) directry\\\"</span>\\n  path=<span class=\\\"token variable\\\">$_path</span>\\n  title<span class=\\\"token operator\\\">+=</span><span class=\\\"token string\\\">\\\"(${num})\\\"</span>\\n  url<span class=\\\"token operator\\\">+=</span><span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$num</span>\\\"</span>\\n  fi\\n  mkdir <span class=\\\"token variable\\\">$path</span>\\n\\n  local indexpath=<span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$path</span>/index.md\\\"</span>\\n  touch <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">-</span> > <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> title: <span class=\\\"token variable\\\">$title</span> >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> date: \\\\<span class=\\\"token string\\\">\\\"$(date \\\"</span>+<span class=\\\"token operator\\\">%</span>Y-<span class=\\\"token operator\\\">%</span>m-<span class=\\\"token operator\\\">%</span>dT<span class=\\\"token operator\\\">%</span>H:<span class=\\\"token operator\\\">%</span>M:<span class=\\\"token operator\\\">%</span>S<span class=\\\"token punctuation\\\">.</span>121Z<span class=\\\"token string\\\">\\\")\\\\\\\"</span> >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> layout: post >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> path: \\\\<span class=\\\"token string\\\">\\\"/<span class=\\\"token variable\\\">$today</span>/<span class=\\\"token variable\\\">$url</span>/\\\\\\\"</span> >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> categories: >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\" \\\"</span><span class=\\\"token operator\\\">-</span><span class=\\\"token string\\\">\\\" \\\"</span>  >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> description: <span class=\\\"token string\\\">\\\"\\\"</span>  >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">-</span> >> <span class=\\\"token variable\\\">$indexpath</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$OPTIND</span>\\\"</span> = 1 <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> then\\n  <span class=\\\"token keyword\\\">while</span> getopts wp:h OPT\\n  <span class=\\\"token keyword\\\">do</span>\\n    case <span class=\\\"token variable\\\">$OPT</span> in\\n      w<span class=\\\"token punctuation\\\">)</span>\\n      title=<span class=\\\"token string\\\">\\\"\\\"</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">-</span>n <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$2</span>\\\"</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> then\\n        title=<span class=\\\"token variable\\\">$2</span> \\n      <span class=\\\"token keyword\\\">else</span>\\n        title=<span class=\\\"token string\\\">\\\"NO_TITLE\\\"</span>\\n      fi\\n      <span class=\\\"token function\\\">write</span> <span class=\\\"token variable\\\">$title</span> <span class=\\\"token variable\\\">$3</span>\\n\\t<span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">;</span>\\n      p<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\"post blog\\\"</span>\\n\\t<span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">;</span>\\n      h<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\"h option. display help\\\"</span>       <span class=\\\"token comment\\\"># for debug</span>\\n        usage\\n        <span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">;</span>\\n      \\\\?<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\"Try to enter the h option.\\\"</span> 1>&amp;2\\n        <span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">;</span>\\n    esac\\n  done\\n<span class=\\\"token keyword\\\">else</span>\\n  <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\"No installed getopts-command.\\\"</span> 1>&amp;2\\n  <span class=\\\"token keyword\\\">exit</span> 1\\nfi\\n</code></pre>\\n      </div>\\n<h3>ポイント</h3>\\n<hr>\\n<ul>\\n<li>\\n<h3>getpts + while</h3>\\n<p>getopts でオプションを決めます。\\n今回は、後々 -p　で post の処理を追加する予定なので、p と w の選択肢があります。<a href=\\\"https://qiita.com/2zk/items/80a8376f2feca02fcee2\\\">参考</a></p>\\n</li>\\n<li>\\n<h3>write関数</h3>\\n<p>ここで、パス、タイトルの指定ができます。\\n/articles/DATE/TITLE/index.md\\nとなります。\\nこの時に、タイトルが被ったら\\n/articles/DATE/TITLE(1)/index.md になるように while 文をぶん回してます。</p>\\n</li>\\n<li>\\n<h3>echo hogehoge > index.md</h3>\\n<p>この書き方で、“hogehoge”が index.md に書き込まれます<br>\\n※“追加”の場合は > ではなく >> にする。</p>\\n</li>\\n<li>\\n<h3>メモ</h3>\\n<h4>条件式</h4>\\n<ul>\\n<li>空文チェック <code>[ -n \\\"変数\\\" ]</code></li>\\n<li>\\n<p>ディレクトリチエック <code>[ -e path ]</code></p>\\n<h4>if文</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-powershell\\\"><code><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span>条件<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> then\\n<span class=\\\"token comment\\\"># do something</span>\\n<span class=\\\"token keyword\\\">else</span> \\n<span class=\\\"token comment\\\"># do something</span>\\n<span class=\\\"token keyword\\\">if</span>\\n</code></pre>\\n      </div>\\n<h4>while文</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-powershell\\\"><code><span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">[</span>条件<span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">do</span>\\n<span class=\\\"token comment\\\"># do something </span>\\ndone\\n</code></pre>\\n      </div>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n<h2>2. package.jsonをいじる</h2>\\n<hr>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code>//package.json\\n...\\n  <span class=\\\"token property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"build\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby build\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"deploy\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby build --prefix-paths &amp;&amp; gh-pages -d public\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"develop\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby develop\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"format\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"prettier --write \\\\\\\"**/*.+(js|jsx|json|css|scss)\\\\\\\"\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"lint\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"eslint --ext .js,.jsx --ignore-pattern public .\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"lint:text\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"textlint src/pages/**/index.md\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"lint:textfix\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"textlint --fix src/pages/**/index.md\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"precommit\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"lint-staged\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"test\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"echo \\\\\\\"Error: no test specified\\\\\\\" &amp;&amp; exit 1\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"blog\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"sh sh_scripts/blog.sh $opt $path $title\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n...\\n</code></pre>\\n      </div>\\n<p>package.json の scripts の部分に書き加えることで,<br>\\n<code>npm run hogehoge</code><br>\\nコマンドを使えるようになります。<br>\\n今回は、<code>blog</code>というコマンドを追加しました。<br>\\nポイントとしては、　上記 hogehoge コマンドを引数(オプションとか)を含めて叩きたい時は  <code>npm run hogehoge -- 引数1 引数2 引数3 ..</code><br>\\nとするところでしょうか。<br>\\nblog コマンドが叩かれたら、sh コマンドを叩いて、引数を渡す、といった挙動になります。</p>\\n<h3>所感</h3>\\n<hr>\\n<p>やりたいことができてよかったです。\\nshellscript は文法がなかなか特殊だったので、若干苦戦しましたかね。<br>\\nshellscript の中で普段使ってるコマンドを叩けるのが新鮮でした。<br>\\n最初は.zshrc の中に書こうか迷ってたのですが、プロジェクト内に sh ファイルを置いて、npm のコマンドで叩けるようになったのでよかったです。</p>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"シェルスクリプトで記事のテンプレ作成\",\"path\":\"/01072018/shell_script/\",\"categories\":[\"shellscript\",\"効率化\"],\"date\":\"2018/01/07\"}}},{\"post\":{\"html\":\"<p>Reacive Extentions の一つであるUniRxを触ってみる。</p>\\n<!--more-->\\n<h2>UniRxとは?</h2>\\n<hr>\\n<p>neuecc さんによるUnity用のRxライブらりなのだ(小並感)<br>\\n<a href=\\\"https://github.com/neuecc/UniRx\\\">UniRxのgithub</a>\\n以下、README.mdを読んでいきましょう。<br>\\n「UniRxって何?」 て聞かれた時のために。</p>\\n<h2>README.md (!原文ママ)</h2>\\n<hr>\\n<blockquote>\\n<p>UniRx (Reactive Extensions for Unity) is a reimplementation of the .NET Reactive Extensions. The Official Rx implementation is great but doesn’t work on Unity and has issues with iOS IL2CPP compatibility.</p>\\n</blockquote>\\n<ul>\\n<li>UniRxは .Net用のリアクティブエクステンションを再実装したものだと。</li>\\n<li>公式の.Net用のも素晴らしいけど、Unityで動かないし、iOSと、IL2CPPでビルドした時に問題があるからね。</li>\\n</ul>\\n<blockquote>\\n<p>Supported platforms are PC/Mac/Android/iOS/WP8/WindowsStore/etc and the library is fully supported on both Unity 5 and 4.6.</p>\\n</blockquote>\\n<ul>\\n<li>Unityにフォーカスしてるし、いろんなプラットフォームをサポートしてるで。</li>\\n</ul>\\n<blockquote>\\n<p>UniRx is available on the Unity Asset Store (FREE) - <a href=\\\"http://u3d.as/content/neuecc/uni-rx-reactive-extensions-for-unity/7tT\\\">http://u3d.as/content/neuecc/uni-rx-reactive-extensions-for-unity/7tT</a></p>\\n</blockquote>\\n<ul>\\n<li>Asset storeから”無料で”入手可。</li>\\n</ul>\\n<p>うーんと、Reactive Extentionがどういうものかは知ってる前提なんですかね?<br>\\nちなみに、READMEはこの後サンプルが続きます。</p>\\n<h2>Reactive Extentions とは</h2>\\n<hr>\\n<p> 困った時のwikipediaっすね。</p>\\n<p> wikipediaをかいつまむと以下です。<br>\\n</p>\\n<ul>\\n<li>オブザーバーパターンによる、非同期処理のAPIのことであると.</li>\\n<li>非同期処理っつーのは,基本的には”call back”を持つもので、プログラマは関数の終了時にコールバックできるよね。</li>\\n<li>この方法はオーバーヘッドを避けれるからいいよねーと。</li>\\n</ul>\\n<p><code>オブザーバーパターン</code>: 監視するパターン(Rx Extentionにおいては、ストリームの監視な気がします。)<br>\\n<code>オーバーヘッド</code>: 余分な処理による負荷</p>\\n<ul>\\n<li>\\n<p>ストリームは以下の3つのイベント時に、それぞれの値を発行しますと。</p>\\n<ul>\\n<li>next</li>\\n<li>error</li>\\n<li>complete</li>\\n</ul>\\n</li>\\n<li>\\n<p>ストリームが購読(これがオブザーバーパターンたる所以ですかね?)されていない限りは、上記の値に対するイベントは発行されません。    </p>\\n</li>\\n</ul>\\n<p>めっちゃ感覚的にかつ、小学生並みの感想といたしましては、    </p>\\n<p><code>痒いところに手が届いて、言語仕様とマッチするコールバック、あ、これを求めてたんですよぉ</code><br>\\n<br>\\nと言いたいです。</p>\\n<p>購読さえしていれば、nextとして任意の値をストリームに流すと、購読していたイベントを、任意のタイミングで、複数回呼べるのがとても便利です。</p>\\n<p>次回から、コードをみていきましょう。</p>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"UniRxを触ってみる（１）\",\"path\":\"/01132018/UniRx_01/\",\"categories\":[\"UniRx\",\"C#\"],\"date\":\"2018/01/13\"}}}]}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---index-4f62f9a08ea51a395ada.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"n0の断片\",\"description\":\"メモとか、スニペットとか\",\"url\":\"https://tkmn0.github.io/scrap/\",\"author\":\"n0\",\"twitter\":\"n0\",\"adsense\":\"\"}},\"remark\":{\"posts\":[{\"post\":{\"html\":\"<p>技術ブログを始めることになりました。</p>\\n<!--more-->\\n<p>技術ブログといっても、メモレベルのことばかりになるやもしれませんが。\\nちなみに、Gatsby という静的 web ページ制作のためのフレームワークを使用しました。React.js で動いています。どうですかー？ロード速いですか？</p>\\n<p>これからページをいじっていこうと思っています。\\nReact.js と、scss を勉強します。</p>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"TECH Blog 始めます\",\"path\":\"/Hello_World/\",\"categories\":[\"雑記\"],\"date\":\"2018/01/06\"}}},{\"post\":{\"html\":\"<p>Hotkey.appのご紹介です。</p>\\n<!--more-->\\n<p>最近は、自分のプログラミングの領域が定まってきたのか、使うツールが決まったものになってきました。</p>\\n<ul>\\n<li>Xcde(iOS)</li>\\n<li>Android Studio</li>\\n<li>Unity(iOS,Android)</li>\\n<li>VisualCode Studio(editor)</li>\\n<li>Chrome(Browser)</li>\\n<li>Boostnote(memo)</li>\\n<li>iterm(CLI)  </li>\\n</ul>\\n<p>使うアプリが決まってたら、Cmd+tabでいちいちアプリを切り替えるより、ショートカットキーで使いたいアプリを最前面に持ってこれたらいいなぁと思っていました。<del>そもそもCmd+tabのUI,UXがあまり好きではないのです</del><br>\\nそこで今回使用したアプリが、<a href=\\\"https://itunes.apple.com/jp/app/hotkey-app/id975890633?mt=12\\\">HotKey.app</a>です。そのままですね。<br>\\n使い方もとても簡単なので、ほぼ脳死で出来上がります。<br>\\n僕の場合は、 </p>\\n<ul>\\n<li>iterm => Cmd+shift+t</li>\\n<li>vscode => Cmd+shit+v</li>\\n<li>Chrome => Cmd+shift+c</li>\\n<li>Boostnote => Cmd+shift+b    </li>\\n</ul>\\n<p>と設定しております。 Unityはバージョンを複数管理しているので、それぞれにコマンド振るのもなんだかなぁと思ったので、、、。 Xcode,AndroidStudioについては割り振っても問題ないのですが、使用頻度的に、とりあえずSpotLightでいいかなと\\n<br>\\n最初は、applescriptとか、automatorを使って自作しようとしたのですが、案外面倒臭かったのでやめました笑。\\n車輪の再なんとかですしね。<br>\\n発見としては、applescriptがjavascriptで書けるらしいのです！これは驚いた。<br>\\nいつか機会があったら、automatorやってみようかなあ　くらいの感じです。<br>\\nではまた次回</p>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"Hotkeyがあつい\",\"path\":\"/01072018/hotkey/\",\"categories\":[\"効率化\"],\"date\":\"2018/01/08\"}}},{\"post\":{\"html\":\"<p>このブログは Gatsby というフレームワークによって書かれています。</p>\\n<!--more-->\\n<p>Gatsby を髪の毛以外に使えるとは思いませんでしたねぇ。<br>\\nGatsby: <a href=\\\"https://github.com/gatsbyjs/gatsby\\\">https://github.com/gatsbyjs/gatsby</a><br>\\nDocument: <a href=\\\"https://www.gatsbyjs.org/docs/\\\">https://www.gatsbyjs.org/docs/</a></p>\\n<p>Document の通りすすめていけば簡単に React.js で書かれたページが作成されます。 もしくは,“Gatsby react”とかって検索していただければ日本語の記事も複数出てきます。(このページは@jaxx2104 さん作と思われるテンプレートが Gatsby の Document に乗ってる starter に含まれていたので、存分に使わせていただいております。こんなかっこいいテンプレート誠にありがとうございます。)</p>\\n<p>記事の作成はマークダウン方式でガシガシ作成します。リアルタイムで記事内容が反映されていくので、書いてて楽しいですね笑。</p>\\n<h2>ブログやること</h2>\\n<hr>\\n<ul>\\n<li>コマンドで記事作成できるようにする</li>\\n<li>コマンドで記事を投稿できるようにする</li>\\n<li>右側に記事のカテゴリ別一覧とかを表示する</li>\\n<li>前の記事、次の記事　ボタンの作成</li>\\n<li>各種リンク(github, twitter)を作る(フッターかな？)</li>\\n</ul>\\n<p>ただ、React.js も scss も詳しくないので、時間がかかるかもなあ、というのが本音ですね。頑張っていきましょう。</p>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"Gatsbyのご紹介。\",\"path\":\"/01072018/gatsby01/\",\"categories\":[\"ブログ\"],\"date\":\"2018/01/06\"}}},{\"post\":{\"html\":\"<p>コマンドで記事のテンプレート作成まで行けたら、と思ってもがいてみたので、その備忘録をば。</p>\\n<h3>ゴール</h3>\\n<p><code>npm run blog -- -w タイトル パス</code>  </p>\\n<p>このコマンドでテンプレートを作成する。</p>\\n<!--more-->\\n<h3>やったこと</h3>\\n<ul>\\n<li>\\n<ol>\\n<li>shellscript を書く</li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\\"2\\\">\\n<li>package.json の中身をいじる</li>\\n</ol>\\n</li>\\n</ul>\\n<h2>1. shellscriptを書く</h2>\\n<hr>\\n<p>blog.sh を作成</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-powershell\\\"><code><span class=\\\"token comment\\\">#blog.sh</span>\\n<span class=\\\"token comment\\\">#!/bin/bash</span>\\n<span class=\\\"token keyword\\\">function</span> usage<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token function\\\">cat</span> &lt;&lt;_EOT_\\nUsage:\\n  <span class=\\\"token variable\\\">$0</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">-</span>w<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">-</span>p<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">-</span>f filename<span class=\\\"token punctuation\\\">]</span> arg1 <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n\\nDescription:\\n  hogehogehoge\\n\\nOptions:\\n  <span class=\\\"token operator\\\">-</span>w    <span class=\\\"token function\\\">write</span> blog<span class=\\\"token punctuation\\\">(</span>create blog componets<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token operator\\\">-</span>p    post blog to github pages\\n\\n_EOT_\\n<span class=\\\"token keyword\\\">exit</span> 1\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">write</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  local today=$<span class=\\\"token punctuation\\\">(</span>date <span class=\\\"token string\\\">\\\"+%m%d%Y\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">!</span> <span class=\\\"token operator\\\">-</span>e <span class=\\\"token string\\\">\\\"./src/pages/articles/${today}\\\"</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> then\\n  mkdir <span class=\\\"token string\\\">\\\"./src/pages/articles/${today}\\\"</span>\\n  fi\\n\\n  local title=<span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$1</span>\\\"</span>\\n  local path=<span class=\\\"token string\\\">\\\"./src/pages/articles/${today}/<span class=\\\"token variable\\\">$title</span>\\\"</span>\\n  local url=<span class=\\\"token string\\\">\\\"#\\\"</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">-</span>n <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$2</span>\\\"</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>then\\n  url=<span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$2</span>\\\"</span>\\n  fi\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">-</span>e <span class=\\\"token variable\\\">$path</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> then\\n  local num=1\\n  local _path=<span class=\\\"token variable\\\">$path</span><span class=\\\"token string\\\">\\\"(${num})\\\"</span>\\n  <span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">-</span>e <span class=\\\"token variable\\\">$_path</span> <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token keyword\\\">do</span> \\n    num=$<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span> num <span class=\\\"token operator\\\">+</span> 1 <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    _path=<span class=\\\"token variable\\\">$path</span><span class=\\\"token string\\\">\\\"(${num})\\\"</span>\\n  done\\n  <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\"the directry ${today} is already exist!\\\"</span>\\n  <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\"create (<span class=\\\"token variable\\\">$num</span>) directry\\\"</span>\\n  path=<span class=\\\"token variable\\\">$_path</span>\\n  title<span class=\\\"token operator\\\">+=</span><span class=\\\"token string\\\">\\\"(${num})\\\"</span>\\n  url<span class=\\\"token operator\\\">+=</span><span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$num</span>\\\"</span>\\n  fi\\n  mkdir <span class=\\\"token variable\\\">$path</span>\\n\\n  local indexpath=<span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$path</span>/index.md\\\"</span>\\n  touch <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">-</span> > <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> title: <span class=\\\"token variable\\\">$title</span> >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> date: \\\\<span class=\\\"token string\\\">\\\"$(date \\\"</span>+<span class=\\\"token operator\\\">%</span>Y-<span class=\\\"token operator\\\">%</span>m-<span class=\\\"token operator\\\">%</span>dT<span class=\\\"token operator\\\">%</span>H:<span class=\\\"token operator\\\">%</span>M:<span class=\\\"token operator\\\">%</span>S<span class=\\\"token punctuation\\\">.</span>121Z<span class=\\\"token string\\\">\\\")\\\\\\\"</span> >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> layout: post >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> path: \\\\<span class=\\\"token string\\\">\\\"/<span class=\\\"token variable\\\">$today</span>/<span class=\\\"token variable\\\">$url</span>/\\\\\\\"</span> >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> categories: >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\" \\\"</span><span class=\\\"token operator\\\">-</span><span class=\\\"token string\\\">\\\" \\\"</span>  >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> description: <span class=\\\"token string\\\">\\\"\\\"</span>  >> <span class=\\\"token variable\\\">$indexpath</span>\\n  <span class=\\\"token function\\\">echo</span> <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">-</span> >> <span class=\\\"token variable\\\">$indexpath</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$OPTIND</span>\\\"</span> = 1 <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> then\\n  <span class=\\\"token keyword\\\">while</span> getopts wp:h OPT\\n  <span class=\\\"token keyword\\\">do</span>\\n    case <span class=\\\"token variable\\\">$OPT</span> in\\n      w<span class=\\\"token punctuation\\\">)</span>\\n      title=<span class=\\\"token string\\\">\\\"\\\"</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">-</span>n <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$2</span>\\\"</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> then\\n        title=<span class=\\\"token variable\\\">$2</span> \\n      <span class=\\\"token keyword\\\">else</span>\\n        title=<span class=\\\"token string\\\">\\\"NO_TITLE\\\"</span>\\n      fi\\n      <span class=\\\"token function\\\">write</span> <span class=\\\"token variable\\\">$title</span> <span class=\\\"token variable\\\">$3</span>\\n\\t<span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">;</span>\\n      p<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\"post blog\\\"</span>\\n\\t<span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">;</span>\\n      h<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\"h option. display help\\\"</span>       <span class=\\\"token comment\\\"># for debug</span>\\n        usage\\n        <span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">;</span>\\n      \\\\?<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\"Try to enter the h option.\\\"</span> 1>&amp;2\\n        <span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">;</span>\\n    esac\\n  done\\n<span class=\\\"token keyword\\\">else</span>\\n  <span class=\\\"token function\\\">echo</span> <span class=\\\"token string\\\">\\\"No installed getopts-command.\\\"</span> 1>&amp;2\\n  <span class=\\\"token keyword\\\">exit</span> 1\\nfi\\n</code></pre>\\n      </div>\\n<h3>ポイント</h3>\\n<hr>\\n<ul>\\n<li>\\n<h3>getpts + while</h3>\\n<p>getopts でオプションを決めます。\\n今回は、後々 -p　で post の処理を追加する予定なので、p と w の選択肢があります。<a href=\\\"https://qiita.com/2zk/items/80a8376f2feca02fcee2\\\">参考</a></p>\\n</li>\\n<li>\\n<h3>write関数</h3>\\n<p>ここで、パス、タイトルの指定ができます。\\n/articles/DATE/TITLE/index.md\\nとなります。\\nこの時に、タイトルが被ったら\\n/articles/DATE/TITLE(1)/index.md になるように while 文をぶん回してます。</p>\\n</li>\\n<li>\\n<h3>echo hogehoge > index.md</h3>\\n<p>この書き方で、“hogehoge”が index.md に書き込まれます<br>\\n※“追加”の場合は > ではなく >> にする。</p>\\n</li>\\n<li>\\n<h3>メモ</h3>\\n<h4>条件式</h4>\\n<ul>\\n<li>空文チェック <code>[ -n \\\"変数\\\" ]</code></li>\\n<li>\\n<p>ディレクトリチエック <code>[ -e path ]</code></p>\\n<h4>if文</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-powershell\\\"><code><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span>条件<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> then\\n<span class=\\\"token comment\\\"># do something</span>\\n<span class=\\\"token keyword\\\">else</span> \\n<span class=\\\"token comment\\\"># do something</span>\\n<span class=\\\"token keyword\\\">if</span>\\n</code></pre>\\n      </div>\\n<h4>while文</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-powershell\\\"><code><span class=\\\"token keyword\\\">while</span> <span class=\\\"token punctuation\\\">[</span>条件<span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">do</span>\\n<span class=\\\"token comment\\\"># do something </span>\\ndone\\n</code></pre>\\n      </div>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n<h2>2. package.jsonをいじる</h2>\\n<hr>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code>//package.json\\n...\\n  <span class=\\\"token property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"build\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby build\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"deploy\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby build --prefix-paths &amp;&amp; gh-pages -d public\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"develop\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby develop\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"format\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"prettier --write \\\\\\\"**/*.+(js|jsx|json|css|scss)\\\\\\\"\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"lint\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"eslint --ext .js,.jsx --ignore-pattern public .\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"lint:text\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"textlint src/pages/**/index.md\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"lint:textfix\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"textlint --fix src/pages/**/index.md\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"precommit\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"lint-staged\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"test\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"echo \\\\\\\"Error: no test specified\\\\\\\" &amp;&amp; exit 1\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"blog\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"sh sh_scripts/blog.sh $opt $path $title\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n...\\n</code></pre>\\n      </div>\\n<p>package.json の scripts の部分に書き加えることで,<br>\\n<code>npm run hogehoge</code><br>\\nコマンドを使えるようになります。<br>\\n今回は、<code>blog</code>というコマンドを追加しました。<br>\\nポイントとしては、　上記 hogehoge コマンドを引数(オプションとか)を含めて叩きたい時は  <code>npm run hogehoge -- 引数1 引数2 引数3 ..</code><br>\\nとするところでしょうか。<br>\\nblog コマンドが叩かれたら、sh コマンドを叩いて、引数を渡す、といった挙動になります。</p>\\n<h3>所感</h3>\\n<hr>\\n<p>やりたいことができてよかったです。\\nshellscript は文法がなかなか特殊だったので、若干苦戦しましたかね。<br>\\nshellscript の中で普段使ってるコマンドを叩けるのが新鮮でした。<br>\\n最初は.zshrc の中に書こうか迷ってたのですが、プロジェクト内に sh ファイルを置いて、npm のコマンドで叩けるようになったのでよかったです。</p>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"シェルスクリプトで記事のテンプレ作成\",\"path\":\"/01072018/shell_script/\",\"categories\":[\"shellscript\",\"効率化\"],\"date\":\"2018/01/07\"}}},{\"post\":{\"html\":\"<p>Reacive Extentions の一つであるUniRxを触ってみる。</p>\\n<!--more-->\\n<h2>UniRxとは?</h2>\\n<hr>\\n<p>neuecc さんによるUnity用のRxライブらりなのだ(小並感)<br>\\n<a href=\\\"https://github.com/neuecc/UniRx\\\">UniRxのgithub</a>\\n以下、README.mdを読んでいきましょう。<br>\\n「UniRxって何?」 て聞かれた時のために。</p>\\n<h2>README.md (!原文ママ)</h2>\\n<hr>\\n<blockquote>\\n<p>UniRx (Reactive Extensions for Unity) is a reimplementation of the .NET Reactive Extensions. The Official Rx implementation is great but doesn’t work on Unity and has issues with iOS IL2CPP compatibility.</p>\\n</blockquote>\\n<ul>\\n<li>UniRxは .Net用のリアクティブエクステンションを再実装したものだと。</li>\\n<li>公式の.Net用のも素晴らしいけど、Unityで動かないし、iOSと、IL2CPPでビルドした時に問題があるからね。</li>\\n</ul>\\n<blockquote>\\n<p>Supported platforms are PC/Mac/Android/iOS/WP8/WindowsStore/etc and the library is fully supported on both Unity 5 and 4.6.</p>\\n</blockquote>\\n<ul>\\n<li>Unityにフォーカスしてるし、いろんなプラットフォームをサポートしてるで。</li>\\n</ul>\\n<blockquote>\\n<p>UniRx is available on the Unity Asset Store (FREE) - <a href=\\\"http://u3d.as/content/neuecc/uni-rx-reactive-extensions-for-unity/7tT\\\">http://u3d.as/content/neuecc/uni-rx-reactive-extensions-for-unity/7tT</a></p>\\n</blockquote>\\n<ul>\\n<li>Asset storeから”無料で”入手可。</li>\\n</ul>\\n<p>うーんと、Reactive Extentionがどういうものかは知ってる前提なんですかね?<br>\\nちなみに、READMEはこの後サンプルが続きます。</p>\\n<h2>Reactive Extentions とは</h2>\\n<hr>\\n<p> 困った時のwikipediaっすね。</p>\\n<p> wikipediaをかいつまむと以下です。<br>\\n</p>\\n<ul>\\n<li>オブザーバーパターンによる、非同期処理のAPIのことであると.</li>\\n<li>非同期処理っつーのは,基本的には”call back”を持つもので、プログラマは関数の終了時にコールバックできるよね。</li>\\n<li>この方法はオーバーヘッドを避けれるからいいよねーと。</li>\\n</ul>\\n<p><code>オブザーバーパターン</code>: 監視するパターン(Rx Extentionにおいては、ストリームの監視な気がします。)<br>\\n<code>オーバーヘッド</code>: 余分な処理による負荷</p>\\n<ul>\\n<li>\\n<p>ストリームは以下の3つのイベント時に、それぞれの値を発行しますと。</p>\\n<ul>\\n<li>next</li>\\n<li>error</li>\\n<li>complete</li>\\n</ul>\\n</li>\\n<li>\\n<p>ストリームが購読(これがオブザーバーパターンたる所以ですかね?)されていない限りは、上記の値に対するイベントは発行されません。    </p>\\n</li>\\n</ul>\\n<p>めっちゃ感覚的にかつ、小学生並みの感想といたしましては、    </p>\\n<p><code>痒いところに手が届いて、言語仕様とマッチするコールバック、あ、これを求めてたんですよぉ</code><br>\\n<br>\\nと言いたいです。</p>\\n<p>購読さえしていれば、nextとして任意の値をストリームに流すと、購読していたイベントを、任意のタイミングで、複数回呼べるのがとても便利です。</p>\\n<p>次回から、コードをみていきましょう。</p>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"UniRxを触ってみる（１）\",\"path\":\"/01132018/UniRx_01/\",\"categories\":[\"UniRx\",\"C#\"],\"date\":\"2018/01/13\"}}}]}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/index.json\n// module id = 380\n// module chunks = 142629428675168"],"sourceRoot":""}